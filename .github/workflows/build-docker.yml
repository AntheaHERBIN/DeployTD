name: Build, Test and Push Docker Image

on:
  push:
    branches: [ "master", "main", "dev" ]
  pull_request:
    branches: [ "master", "main", "dev" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'

      - name: Run unit tests
        run: go test ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/golang-app:latest .


      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/golang-app:latest

  automated-api-tests:
    runs-on: ubuntu-latest
    needs: build-test-deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start app stack with Docker Compose
        run: docker compose up -d

      - name: Wait for API to be ready
        run: |
          echo "Waiting for API to be ready..."
          for i in {1..20}; do
            if curl -s http://localhost:8080/healthz > /dev/null; then
              echo "API is up!"
              break
            fi
            sleep 3
          done
      - uses: actions/checkout@v4
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "39952591-c9f328f3-67df-4031-9e9b-eb01dc13ec2e"
